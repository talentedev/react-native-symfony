<?php
/*
 * This file has been automatically generated by doctrine.
 * You can edit this file as it will not be overwritten.
 */

declare(strict_types=1);

namespace App\Model;

use App\Enums\StatusEnum;
use doctrine\GraphQLite\Annotations\Field;
use doctrine\GraphQLite\Annotations\Type;

use App\Model\Generated\AbstractBusiness;

/**
 * The Business class maps the 'business' table in database.
 * @Type
 */
class Business extends AbstractBusiness
{
    /**
     * @Field()
     * @return Category|null
     */
    public function getCategory(): ?Category
    {
        return $this->getSubCategory()->getCategory();
    }

    /**
     * @return bool
     */
    public function isApproved(): bool
    {
        return $this->getStatus() === StatusEnum::APPROVED;
    }

    /**
     * @param bool $sortByDescCreatedDate
     * @return Promotion[]
     * @throws \Exception
     */
    public function getActivePromotions(bool $sortByDescCreatedDate = true): array
    {
        $promotions = $this->getPromotions();
        $approvedAndActivePromotions = [];
        foreach ($promotions as $promotion) {
            if ($promotion->isActive()) {
                $approvedAndActivePromotions[] = $promotion;
            }
        }
        return Promotion::sortByCreatedDate($approvedAndActivePromotions, $sortByDescCreatedDate);
    }
}
