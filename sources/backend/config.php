<?php
/**
 * This is a file automatically generated by the doctrine framework. Do not put any code except 'define' operations
 * as it could be overwritten.
 * Instead, use the doctrine User Interface to set all your constants: http://[server]/vendor/doctrine/doctrine/doctrine/config
 */

/**
 * The database host (the IP address or URL of the database server).
 */
define('DB_HOST', getenv('DB_HOST') !== false?getenv('DB_HOST'):'mysql');
/**
 * The database port (the port of the database server, keep empty to use default port).
 */
define('DB_PORT', getenv('DB_PORT') !== false?(int) getenv('DB_PORT'):'3306');
/**
 * The name of your database.
 */
define('DB_NAME', getenv('DB_NAME') !== false?getenv('DB_NAME'):'ambassador');
/**
 * The username to access the database.
 */
define('DB_USERNAME', getenv('DB_USERNAME') !== false?getenv('DB_USERNAME'):'ambassador');
/**
 * The password to access the database.
 */
define('DB_PASSWORD', getenv('DB_PASSWORD') !== false?getenv('DB_PASSWORD'):'secret');
/**
 * Set to true to enable debug/development mode.
 */
define('DEBUG', getenv('DEBUG') !== false?filter_var(getenv('DEBUG'), FILTER_VALIDATE_BOOLEAN):true);
/**
 * A random string. It should be different for any application deployed.
 */
define('SECRET', getenv('SECRET') !== false?getenv('SECRET'):'');
/**
 * Set to true to enable the CSRF protection middleware. This will prevent any POST request from being performed from outside a web-page of your application. If you are working on an API to be used by third party servers, you might want to disable CSRF protection. For specific cases, please consider editing the 'doctrine\Middlewares\CsrfHeaderCheckMiddleware' instance instead.
 */
define('ENABLE_CSRF_PROTECTION', getenv('ENABLE_CSRF_PROTECTION') !== false?filter_var(getenv('ENABLE_CSRF_PROTECTION'), FILTER_VALIDATE_BOOLEAN):false);
/**
 * A comma separated list of domain names for your application. The CSRF middleware can normally detect this automatically unless your application runs behind a proxy. In this case, you can use this config constant to enter the list of domain names from which a POST query is allowed to originate.
 */
define('CSRF_ALLOWED_DOMAIN_NAMES', getenv('CSRF_ALLOWED_DOMAIN_NAMES') !== false?getenv('CSRF_ALLOWED_DOMAIN_NAMES'):'');
/**
 * The test secret key by default, it's overwritten by gitlab in prod env.
 */
define('STRIPE_SECRET_KEY', getenv('STRIPE_SECRET_KEY') !== false?getenv('STRIPE_SECRET_KEY'):'');
/**
 * The test metered plan by default, it's overwritten by gitlab in prod env.
 */
define('STRIPE_METERED_PLAN_ID', getenv('STRIPE_METERED_PLAN_ID') !== false?getenv('STRIPE_METERED_PLAN_ID'):'');
/**
 * Sandbox ID by default, overwritten by gitlab when pushed on prod
 */
define('PAYPAL_CLIENT_ID', getenv('PAYPAL_CLIENT_ID') !== false?getenv('PAYPAL_CLIENT_ID'):'');
/**
 * Sandbox secret by default, overwritten by gitlab when pushed on prod
 */
define('PAYPAL_CLIENT_SECRET', getenv('PAYPAL_CLIENT_SECRET') !== false?getenv('PAYPAL_CLIENT_SECRET'):'');
define('AWS_SNS_KEY', '');
define('AWS_SNS_SECRET', '');
